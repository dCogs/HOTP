@model  HOTP.Models.CascadeGoals

@{
    ViewBag.Title = "All";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using HOTPHelpers.Helpers

<style>
     .weightInput input {
        width: 40px;
    }
     .table td {
         font-size:12px;
     }
</style>
<h2>Organizational Goals</h2>
<h4>Assign to Employees</h4>

@using (Html.BeginForm("Cascade", "OrgGoals", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <table class="table">
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th></th>
            @foreach (var course in Model.Goals)
            {
                <th>
                    @Html.DisplayFor(modelItem => course.PillarGoalName)
                </th>
            }
            <th>Total</th>
        </tr>

        @for (int i = 0; i < Model.Employees.Count; i++)
        {
            <tr>
                <td >
                    @Html.Hidden("MyEmps", (@i))
                    @Html.TextBox("MyEmps.EmployeeID", Model.Employees[i].EmployeeID, new { @class = "noBox", @readonly = "readonly", @tabindex=-1 })
                </td>
                <td class="noBox">
                    @Html.TextBox("MyEmps[" + (@i) + "].LastName", Model.Employees[i].LastName + ", " + Model.Employees[i].FirstName,
                     new { @class = "noBox", @readonly = "readonly", @tabindex = -1 })
                </td>
                <td class="noBox">Weights:</td>
                @for (int g = 0; g < Model.Goals.Count; g++)
                {
                    <td class="weightInput">
                        @Html.Hidden("MyGoals", (@g))
                        @Html.Hidden("MyGoals_" + @i + "[" + (@g) + "].GoalID", Model.Goals[g].GoalID)
                        @Html.TextBox("MyGoals_" + Model.Employees[i].EmployeeID + "_" + Model.Goals[g].GoalID + "_Weight",
                              MyHTMLHelpers.GetWeight(Model.Employees[i].EmployeeID, Model.Goals[g].GoalID), new { @class = "weight" })%
                    </td>
                }
                <td></td>
            </tr>
        }

        <tr>
            <td colspan="4">
                <input type="submit" value="Save" class="btn btn-default" />
                &nbsp;
                @Html.ActionLink("Back to List (don't save)", "Index", new { year = Html.DisplayFor(modelItem => Model.Goals[1].YearEnding) })
            </td>
        </tr>
    </table>
}

<script type="text/javascript">
    $(document).ready(function () {
        $(".weight").keypress(function (event) {
            if ((event.which < 48 || event.which > 57)) {
                event.preventDefault();
            }
        });
    });

function isNumberKey(evt)
{
          var charCode = (evt.which) ? evt.which : event.keyCode;
          if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
             return false;

          return true;
}
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
