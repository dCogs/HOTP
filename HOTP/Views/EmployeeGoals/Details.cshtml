@model HOTP.Models.EvalViewModel

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Individual Goal</h2>
<h4>@Html.Display("EmployeeName")</h4>

@*@using (Html.BeginForm())*@
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "displayForm" }))
{
    @Html.AntiForgeryToken()

    <input type="hidden" id="scoreFrom" value="ind" />

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Goal.GoalID)
        @Html.HiddenFor(model => model.EmployeeGoalID)
        @Html.Hidden("EmployeeID")

        <div class="row">
            <div class="form-group">
                @Html.Label("Weight:", htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-1">
                    @Html.TextBox("Weight", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        @*Begin Copy*@

        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Goal.YearEnding, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Goal.YearEnding, ViewBag.YearEnding as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control ratingCalc " })
                        @Html.ValidationMessageFor(model => model.Goal.YearEnding, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Goal.GoalType, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.Goal.GoalType, htmlAttributes: new { @class = "form-control", @readonly = "readonly", @Value = "Individual" })
                        @Html.ValidationMessageFor(model => model.Goal.GoalType, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Goal.Pillar, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Goal.Pillar, ViewBag.Pillar as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control ratingCalc " })
                        @Html.ValidationMessageFor(model => model.Goal.Pillar, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Goal.GoalName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Goal.GoalName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Goal.GoalName, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Goal.PillarGoalName)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Goal.Goal, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Goal.Goal, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Goal.Goal, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Goal.Status, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.RadioButtonFor(model => model.Goal.Status, "Active", new { id = "Status_Active" })
                        <label for="Status_true">Active</label>&nbsp;
                        @Html.RadioButtonFor(model => model.Goal.Status, "Inactive", new { id = "Status_Inactive" })
                        <label for="Status_Inactive">Inactive</label>
                        @Html.ValidationMessageFor(model => model.Goal.Status, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Goal.ResultsMeasured, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Goal.ResultsMeasured, ViewBag.ResultsMeasured as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control ratingCalc " })
                        @Html.ValidationMessageFor(model => model.Goal.ResultsMeasured, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Goal.YearEndCalculation, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Goal.YearEndCalculation, ViewBag.YearEndCalculation as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control ratingCalc " })
                        @Html.ValidationMessageFor(model => model.Goal.YearEndCalculation, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Goal.UnitsMeasuredIn, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Goal.UnitsMeasuredIn, ViewBag.UnitsMeasuredIn as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control ratingCalc " })
                        @Html.ValidationMessageFor(model => model.Goal.UnitsMeasuredIn, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Goal.NumDecimals, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Goal.NumDecimals, new { htmlAttributes = new { @class = "form-control ratingCalc" } })
                        @Html.ValidationMessageFor(model => model.Goal.NumDecimals, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

            <div class="col-lg-6">

                <div class="form-group">
                    @Html.LabelFor(model => model.Goal.BestRating, htmlAttributes: new { @class = "control-label col-md-6 " })
                    <div class="col-md-6">
                        @Html.DropDownListFor(model => model.Goal.BestRating, ViewBag.BestRating as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control ratingCalc " })
                        @Html.ValidationMessageFor(model => model.Goal.BestRating, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Goal.Rating5, htmlAttributes: new { @class = "control-label col-sm-6 " })
                    <div class="col-sm-2">
                        @Html.EditorFor(model => model.Goal.Rating5, new { htmlAttributes = new { @class = "form-control ratingCalc " } })
                        @Html.ValidationMessageFor(model => model.Goal.Rating5, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-4 tighter">
                        @Html.TextBoxFor(model => model.Goal.Rating5Suffix, htmlAttributes: new { @class = "noBox ", @readonly = "readonly" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Goal.Rating4, htmlAttributes: new { @class = "control-label col-sm-6 " })
                    <div class="col-sm-2">
                        @Html.EditorFor(model => model.Goal.Rating4, new { htmlAttributes = new { @class = "form-control ratingCalc " } })
                        @Html.ValidationMessageFor(model => model.Goal.Rating4, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-1 tighter">to</div>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(model => model.Goal.Rating4End, htmlAttributes: new { @class = "noBox ", @readonly = "readonly" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Goal.Rating3, htmlAttributes: new { @class = "control-label col-sm-6 " })
                    <div class="col-sm-2">
                        @Html.EditorFor(model => model.Goal.Rating3, new { htmlAttributes = new { @class = "form-control ratingCalc " } })
                        @Html.ValidationMessageFor(model => model.Goal.Rating3, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-1 tighter">to</div>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(model => model.Goal.Rating3End, htmlAttributes: new { @class = "noBox ", @readonly = "readonly" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Goal.Rating2, htmlAttributes: new { @class = "control-label col-sm-6 " })
                    <div class="col-sm-2">
                        @Html.EditorFor(model => model.Goal.Rating2, new { htmlAttributes = new { @class = "form-control ratingCalc " } })
                        @Html.ValidationMessageFor(model => model.Goal.Rating2, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-1 tighter">to</div>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(model => model.Goal.Rating2End, htmlAttributes: new { @class = "noBox ", @readonly = "readonly" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Goal.Rating1, htmlAttributes: new { @class = "control-label col-sm-6 " })
                    <div class="col-sm-2">
                        @Html.EditorFor(model => model.Goal.Rating1, new { htmlAttributes = new { @class = "form-control ratingCalc ", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Goal.Rating1, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-4 tighter">
                        @Html.TextBoxFor(model => model.Goal.Rating1Suffix, htmlAttributes: new { @class = "noBox ", @readonly = "readonly" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Goal.ResultsEntered, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.DropDownListFor(model => model.Goal.ResultsEntered, ViewBag.ResultsEntered as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control ratingCalc " })
                        @Html.ValidationMessageFor(model => model.Goal.ResultsEntered, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                    @Html.LabelFor(model => model.Goal.EnteredBy, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Goal.EnteredBy, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Goal.EnteredBy, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Goal.NonEditableByLeader, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Goal.NonEditableByLeader)
                            @Html.ValidationMessageFor(model => model.Goal.NonEditableByLeader, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>*@

                <div class="form-group">
                    <div style="font-size:large;font-weight:bold">
                        Which months are included in the scoring?
                        &nbsp;<input type="checkbox" id="allMonths" /><label id="allMonthsLabel">&nbsp;All</label>
                    </div>
                    <div class="row">
                        <div class="checkbox col-lg-2">
                            @Html.CheckBoxFor(model => model.Goal.Jan, htmlAttributes: new { @class = " monthCheck " })
                            @Html.LabelFor(model => model.Goal.Jan, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <span class="checkbox col-lg-2">
                            @Html.CheckBoxFor(model => model.Goal.Feb, htmlAttributes: new { @class = " monthCheck " })
                            @Html.LabelFor(model => model.Goal.Feb, htmlAttributes: new { @class = "control-label col-md-2" })
                        </span>
                        <span class="checkbox col-lg-2">
                            @Html.CheckBoxFor(model => model.Goal.Mar, htmlAttributes: new { @class = " monthCheck " })
                            @Html.LabelFor(model => model.Goal.Mar, htmlAttributes: new { @class = "control-label col-md-2" })
                        </span>
                        <span class="checkbox col-lg-2">
                            @Html.CheckBoxFor(model => model.Goal.Apr, htmlAttributes: new { @class = " monthCheck " })
                            @Html.LabelFor(model => model.Goal.Apr, htmlAttributes: new { @class = "control-label col-md-2" })
                        </span>
                        <span class="checkbox col-lg-2">
                            @Html.CheckBoxFor(model => model.Goal.May, htmlAttributes: new { @class = " monthCheck " })
                            @Html.LabelFor(model => model.Goal.May, htmlAttributes: new { @class = "control-label col-md-2" })
                        </span>
                        <span class="checkbox col-lg-2">
                            @Html.CheckBoxFor(model => model.Goal.Jun, htmlAttributes: new { @class = " monthCheck " })
                            @Html.LabelFor(model => model.Goal.Jun, htmlAttributes: new { @class = "control-label col-md-2" })
                        </span>
                    </div>
                    <div class="row">
                        <span class="checkbox col-lg-2">
                            @Html.CheckBoxFor(model => model.Goal.Jul, htmlAttributes: new { @class = " monthCheck " })
                            @Html.LabelFor(model => model.Goal.Jul, htmlAttributes: new { @class = "control-label col-md-2" })
                        </span>
                        <span class="checkbox col-lg-2">
                            @Html.CheckBoxFor(model => model.Goal.Aug, htmlAttributes: new { @class = " monthCheck " })
                            @Html.LabelFor(model => model.Goal.Aug, htmlAttributes: new { @class = "control-label col-md-2" })
                        </span>
                        <span class="checkbox col-lg-2">
                            @Html.CheckBoxFor(model => model.Goal.Sep, htmlAttributes: new { @class = " monthCheck " })
                            @Html.LabelFor(model => model.Goal.Sep, htmlAttributes: new { @class = "control-label col-md-2" })
                        </span>
                        <span class="checkbox col-lg-2">
                            @Html.CheckBoxFor(model => model.Goal.Oct, htmlAttributes: new { @class = " monthCheck " })
                            @Html.LabelFor(model => model.Goal.Oct, htmlAttributes: new { @class = "control-label col-md-2" })
                        </span>
                        <span class="checkbox col-lg-2">
                            @Html.CheckBoxFor(model => model.Goal.Nov, htmlAttributes: new { @class = " monthCheck " })
                            @Html.LabelFor(model => model.Goal.Nov, htmlAttributes: new { @class = "control-label col-md-2" })
                        </span>
                        <span class="checkbox col-lg-2">
                            @Html.CheckBoxFor(model => model.Goal.Dec, htmlAttributes: new { @class = " monthCheck " })
                            @Html.LabelFor(model => model.Goal.Dec, htmlAttributes: new { @class = "control-label col-md-2" })
                        </span>
                    </div>

                </div>
            </div>
        </div>

        @*End Copy*@

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<script type="text/javascript">
    $(document).ready(function () {
        $("#displayForm :input").attr("disabled", true);
        $('#Weight').keypress(function (event) {
            if ((event.which < 48 || event.which > 57)) {
                event.preventDefault();
            }
        });
    });
</script>
<script src="~/Scripts/makeRatings.js"></script>

