@model HOTP.Models.MakeOrg
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
        .tighter {
        padding: 0px -0px 0px 0px;
        margin: 0px -8px 0px -4px;
        width: 15px;
    }

    .control-label{
        margin-left:-12px;
    }

</style>
<h2>Reassign Individual Goal as Organizational Goal</h2>
@*<h4>@Html.Display("EmployeeName")</h4>*@

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.Eval.Goal.GoalID)
        @Html.HiddenFor(model => model.Eval.EmployeeGoalID)

        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Eval.Goal.YearEnding, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.Eval.Goal.YearEnding, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Eval.Goal.GoalType, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.Eval.Goal.GoalType, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Eval.Goal.Pillar, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.Eval.Goal.Pillar, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Eval.Goal.GoalName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.Eval.Goal.GoalName, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Eval.Goal.Goal, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.Eval.Goal.Goal, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Select an orgranizational goal to reassign this to", htmlAttributes: new  { @class="control-label col-md-4"})
                    <div class="col-md-8">
                        @Html.DropDownList("OrgGoals")
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Make this an Org Goal" class="btn btn-default" />
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<script type="text/javascript">
    $(document).ready(function () {
        $('#Weight').keypress(function (event) {
            if ((event.which < 48 || event.which > 57)) {
                event.preventDefault();
            }
        });
    });
</script>
<script src="~/Scripts/makeRatings.js"></script>

